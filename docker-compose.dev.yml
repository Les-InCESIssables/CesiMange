services:
    auth-service:
        build:
            context: .
            dockerfile: platforms/microservices/auth-service/Dockerfile.dev
        container_name: auth-service-dev
        ports:
            - '4001:4001'
        environment:
            - NODE_ENV=development
            - DOCKER_ENV=true
        env_file:
            - ./platforms/microservices/auth-service/.env.development
        volumes:
            - ./platforms/microservices/auth-service:/app/platforms/microservices/auth-service
            - ./platforms/services/base-classes:/app/platforms/services/base-classes
            - ./platforms/services/data-access-layer:/app/platforms/services/data-access-layer
        networks:
            - api_network
        command: ['npm', 'run', 'dev']

    user-service:
        build:
            context: .
            dockerfile: platforms/microservices/user-service/Dockerfile.dev
        container_name: user-service-dev
        ports:
            - '4002:4002'
        environment:
            - NODE_ENV=development
            - DOCKER_ENV=true
        env_file:
            - ./platforms/microservices/user-service/.env.development
        volumes:
            - ./platforms/microservices/user-service:/app/platforms/microservices/user-service
            - ./platforms/services/base-classes:/app/platforms/services/base-classes
            - ./platforms/services/data-access-layer:/app/platforms/services/data-access-layer
        networks:
            - api_network
        command: ['npm', 'run', 'dev']

    restaurant-service:
        build:
            context: .
            dockerfile: platforms/microservices/restaurant-service/Dockerfile.dev
        container_name: restaurant-service
        ports:
            - '4003:4003'
        environment:
            - NODE_ENV=development
            - DOCKER_ENV=true
        env_file:
            - ./platforms/microservices/restaurant-service/.env.development
        volumes:
            - ./platforms/microservices/restaurant-service:/app/platforms/microservices/restaurant-service
            - ./platforms/services/base-classes:/app/platforms/services/base-classes
            - ./platforms/services/data-access-layer:/app/platforms/services/data-access-layer
        networks:
            - api_network
        command: ['npm', 'run', 'dev']

    mongodb-user:
        build:
            context: ./platforms/databases/mongodb/user-service
            dockerfile: Dockerfile.mongodb
        container_name: db-mongodb-user-dev
        ports:
            - '27018:27017'
        volumes:
            - ./platforms/databases/mongodb/user-service/data:/data/db
            - ./platforms/databases/mongodb/user-service/seed:/docker-entrypoint-initdb.d
        networks:
            - api_network

    mongodb-restaurant:
        build:
            context: ./platforms/databases/mongodb/restaurant-service
            dockerfile: Dockerfile.mongodb
        container_name: db-mongodb-restaurant-dev
        ports:
            - '27019:27017'
        volumes:
            - ./platforms/databases/mongodb/restaurant-service/data:/data/db
            - ./platforms/databases/mongodb/restaurant-service/seed:/docker-entrypoint-initdb.d
        networks:
            - api_network

    mssql-auth:
        build:
            context: ./platforms/databases/sqlserver/auth-service
            dockerfile: Dockerfile.mssql
        container_name: db-mssql-auth-dev
        ports:
            - '1433:1433'
        volumes:
            - ./platforms/databases/sqlserver/auth-service/data:/var/opt/mssql/data
            - ./platforms/databases/sqlserver/auth-service/log:/var/opt/mssql/log
            - ./platforms/databases/sqlserver/auth-service/secrets:/var/opt/mssql/secrets
        networks:
            - api_network

    nginx-gateway:
        build:
            context: .
            dockerfile: platforms/nginx-gateway/Dockerfile
        container_name: nginx-gateway-dev
        ports:
            - '8080:80'
        environment:
            - ENV=development
        networks:
            - api_network

networks:
    api_network:
        driver: bridge
