# /etc/nginx/nginx.conf

user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    server_tokens off;
    client_max_body_size 10M;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    # Définition des upstreams pour les microservices.
    upstream user_service {
        server user-service:4002;
        keepalive 16;
    }

    upstream restaurant_service {
        server restaurant-service:4003;
        keepalive 16;
    }

    server {
        listen 80;
        server_name localhost;

        # Endpoint pour la santé
        location /health {
            access_log off;
            return 200 "OK\n";
        }

        # Routage pour le user-service
        location /users {
            limit_req zone=api_limit burst=20 nodelay;
            # Réécriture de l'URI pour adapter au backend si nécessaire
            rewrite ^/users(.*)$ /api/users$1 break;
            proxy_pass http://user_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_redirect off;
        }

        # Routage pour le restaurant-service
        location /restaurant {
            limit_req zone=api_limit burst=20 nodelay;
            rewrite ^/restaurant(.*)$ /api/restaurant$1 break;
            proxy_pass http://restaurant_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_redirect off;
        }

        # Page d'accueil par défaut
        location / {
            return 200 "Bienvenue sur l'API Gateway!\n";
        }

        # Pages d'erreur personnalisées
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
