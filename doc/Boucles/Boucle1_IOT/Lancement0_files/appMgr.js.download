class AppMgr {
    constructor() {
        scDynUiMgr.collBlk.fMode = 1;
        const cbks = scPaLib.findNodes("des:.collapsed");
        for (let i=0; i<cbks.length; i++) {
            const cbk = cbks[i];
            const tgl = cbk.fTgl = scPaLib.findNode("des:a", cbk);
            const co = scPaLib.findNode("chl:div", cbk);
            co.fClassName = co.className;
            co.fTitle = tgl;
            co.className = co.fClassName + " " + scDynUiMgr.collBlk.fClassPrefix + "open";
            co.fCollapsed = false;
        }
        scOnLoads[scOnLoads.length] = this;
        // Init tools
        const tools = this.fTools = scPaLib.findNode("ide:tools");
        if (tools){
            if (cbks.length>0){
                const bd = dom.newBd(tools)
                bd.elt("a", "cbkOpenBtn")
                    .att("href", "#")
                    .att("title", "Afficher toutes les sections qui sont refermées")
                    .att("role", "button")
                    .elt("span")
                    .text("Tout afficher")
                    .up()
                    .listen("click", (pEvent) => {
                        pEvent.preventDefault()
                        this.openCbks()
                    })
                bd.up()
                bd.elt("a", "cbkCloseBtn")
                    .att("href", "#")
                    .att("title", "Réduire toutes les sections qui sont ouvertes")
                    .att("role", "button")
                    .elt("span")
                    .text("Tout réduire")
                    .up()
                    .listen("click", (pEvent) => {
                        pEvent.preventDefault()
                        this.closeCbks()
                    })
            }
        }
        const links = scPaLib.findNodes("des:a", sc$("outSec"))
        links.forEach((link) => {
            link.addEventListener("click", (pEvent) => {
                for (const pLink of links) {
                    pLink.classList.remove("sel_yes")
                }
                link.classList.add("sel_yes")
                this.gotoSection(link.href, pEvent)
            })
        })
    }

    openCbks(){
        const cbks = scPaLib.findNodes("des:.collBlk_closed");
        for (let i=0; i<cbks.length; i++) cbks[i].fTitle.onclick();
    }

    closeCbks(){
        const cbks = scPaLib.findNodes("des:.collBlk_open");
        for (let i=0; i<cbks.length; i++) cbks[i].fTitle.onclick();
    }

    gotoSection(url, event) {
        event.preventDefault()
        const rootElement = document.querySelector('#header')
        const target = document.querySelector(`#${url.split('#')[1]}`)
        const targetTop = 0
        target.style.position = 'relative'
        target.style.top = `-${sc$("outCat").getBoundingClientRect().height + sc$("outSec").getBoundingClientRect().height}px`
        target.scrollIntoView({ behavior: 'smooth' })
        target.style.top = targetTop
    }
}

new AppMgr()
